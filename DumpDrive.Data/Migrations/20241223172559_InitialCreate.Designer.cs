// <auto-generated />
using System;
using DumpDrive.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DumpDrive.Data.Migrations
{
    [DbContext(typeof(DumpDriveDbContext))]
    [Migration("20241223172559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ChangedByUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("FileId");

                    b.ToTable("AuditLogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66d6a1d5-adc5-422d-9e36-43315f838004"),
                            ChangeType = "Created",
                            ChangedByUserId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8"),
                            FileId = new Guid("ad6da18c-9bc1-4b7c-af3a-93f74381b542"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3179)
                        },
                        new
                        {
                            Id = new Guid("3b2407fb-15f2-4136-a586-e6d0e2b87541"),
                            ChangeType = "Created",
                            ChangedByUserId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9"),
                            FileId = new Guid("997a34b4-e72d-4597-9c29-5e46652da1bb"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3212)
                        },
                        new
                        {
                            Id = new Guid("99f1f748-666c-4599-9303-6971e88055a9"),
                            ChangeType = "Updated",
                            ChangedByUserId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8"),
                            FileId = new Guid("1ac79a5c-31db-406c-bfd8-f3f29428380d"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3218)
                        },
                        new
                        {
                            Id = new Guid("ee7befdf-8129-498c-b1ab-8381925a042e"),
                            ChangeType = "Created",
                            ChangedByUserId = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470"),
                            FileId = new Guid("733038f1-9fea-4c49-a2ac-6b4e4f88ca97"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3222)
                        },
                        new
                        {
                            Id = new Guid("27bf58f5-3959-40cd-92ee-5520b5027f60"),
                            ChangeType = "Created",
                            ChangedByUserId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9"),
                            FileId = new Guid("f3b22290-da73-4468-a6ce-c0a33bb18dc3"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3226)
                        },
                        new
                        {
                            Id = new Guid("c951cab8-7208-439b-809b-3e774e128580"),
                            ChangeType = "Updated",
                            ChangedByUserId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8"),
                            FileId = new Guid("c1f9dee4-fe2e-4162-a13b-f38c6dd25b64"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3235)
                        },
                        new
                        {
                            Id = new Guid("71760b64-1adb-4176-aa29-3a62b37ad194"),
                            ChangeType = "Created",
                            ChangedByUserId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8"),
                            FileId = new Guid("12f85cfa-303b-47e2-b95a-92551dc1d418"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3242)
                        },
                        new
                        {
                            Id = new Guid("7a7d8328-9afa-47fe-96ec-cdc18c1dd7c9"),
                            ChangeType = "Created",
                            ChangedByUserId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8"),
                            FileId = new Guid("27732c22-87e0-43d2-8e55-5c65377b1b4e"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3247)
                        },
                        new
                        {
                            Id = new Guid("53646f7d-77a1-4943-a173-fe9f09470da5"),
                            ChangeType = "Updated",
                            ChangedByUserId = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470"),
                            FileId = new Guid("31fa2f23-f357-4295-9e64-c52189bae71b"),
                            Timestamp = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(3252)
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86b43ac1-62bb-492a-828e-6fa9ae929a8f"),
                            Content = "Great resume!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(847),
                            FileId = new Guid("ad6da18c-9bc1-4b7c-af3a-93f74381b542"),
                            UserId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8")
                        },
                        new
                        {
                            Id = new Guid("c0eac115-7c24-4ef0-9537-f1e9a6141070"),
                            Content = "Lovely picture!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(875),
                            FileId = new Guid("997a34b4-e72d-4597-9c29-5e46652da1bb"),
                            UserId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9")
                        },
                        new
                        {
                            Id = new Guid("e2eefdff-e559-4ac4-9adb-ead043b74de8"),
                            Content = "Nice music!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(890),
                            FileId = new Guid("1ac79a5c-31db-406c-bfd8-f3f29428380d"),
                            UserId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8")
                        },
                        new
                        {
                            Id = new Guid("368e3f5b-6bd7-4d2f-b87e-85cb1c9b11a2"),
                            Content = "Cool video!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(894),
                            FileId = new Guid("733038f1-9fea-4c49-a2ac-6b4e4f88ca97"),
                            UserId = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470")
                        },
                        new
                        {
                            Id = new Guid("8a3e7b57-363b-4fd6-80a7-d8a406a2d183"),
                            Content = "This resume could be better.",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(899),
                            FileId = new Guid("ad6da18c-9bc1-4b7c-af3a-93f74381b542"),
                            UserId = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470")
                        },
                        new
                        {
                            Id = new Guid("c55ee1b4-898b-41d5-a465-1b51f525e395"),
                            Content = "Beautiful image!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(907),
                            FileId = new Guid("997a34b4-e72d-4597-9c29-5e46652da1bb"),
                            UserId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8")
                        },
                        new
                        {
                            Id = new Guid("b2c1be86-b12a-493c-a556-05de9dd556cc"),
                            Content = "I dont like this song!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(913),
                            FileId = new Guid("1ac79a5c-31db-406c-bfd8-f3f29428380d"),
                            UserId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8")
                        },
                        new
                        {
                            Id = new Guid("3643e7f0-aea2-40d1-817b-bd844d8039e7"),
                            Content = "Amazing video!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(918),
                            FileId = new Guid("733038f1-9fea-4c49-a2ac-6b4e4f88ca97"),
                            UserId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9")
                        },
                        new
                        {
                            Id = new Guid("a3479e9a-d674-4b82-9365-160937362813"),
                            Content = "Excellent project plan!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(922),
                            FileId = new Guid("f3b22290-da73-4468-a6ce-c0a33bb18dc3"),
                            UserId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9")
                        },
                        new
                        {
                            Id = new Guid("9b54ef00-8324-4378-a0c4-fc1b7fb8f319"),
                            Content = "Great presentation!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(927),
                            FileId = new Guid("c1f9dee4-fe2e-4162-a13b-f38c6dd25b64"),
                            UserId = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470")
                        },
                        new
                        {
                            Id = new Guid("28549378-f147-4878-989a-b436914156b6"),
                            Content = "Very detailed report!",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(934),
                            FileId = new Guid("12f85cfa-303b-47e2-b95a-92551dc1d418"),
                            UserId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8")
                        },
                        new
                        {
                            Id = new Guid("9dac0dab-6e9e-4bcd-95e2-e95afc95b949"),
                            Content = "Important archive data.",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(939),
                            FileId = new Guid("27732c22-87e0-43d2-8e55-5c65377b1b4e"),
                            UserId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9")
                        },
                        new
                        {
                            Id = new Guid("74fb98b4-8dc2-4c69-855d-c7e5cd6c120f"),
                            Content = "Data needs cleanup.",
                            CreatedAt = new DateTime(2024, 12, 23, 18, 25, 58, 269, DateTimeKind.Local).AddTicks(943),
                            FileId = new Guid("31fa2f23-f357-4295-9e64-c52189bae71b"),
                            UserId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8")
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DumpFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FolderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad6da18c-9bc1-4b7c-af3a-93f74381b542"),
                            FolderId = new Guid("32d1d217-cd8e-4b9c-b1a7-6145fedf7bb6"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 246, DateTimeKind.Local).AddTicks(9563),
                            Name = "resume.pdf",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("997a34b4-e72d-4597-9c29-5e46652da1bb"),
                            FolderId = new Guid("d57e963a-699a-4903-806d-65af672bdf32"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(7963),
                            Name = "holiday.jpg",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1ac79a5c-31db-406c-bfd8-f3f29428380d"),
                            FolderId = new Guid("7c77b084-8744-493f-9232-64524dd62485"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(7998),
                            Name = "song.mp3",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("733038f1-9fea-4c49-a2ac-6b4e4f88ca97"),
                            FolderId = new Guid("32cfeb41-b462-41d0-885f-b63661d9f1c2"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(8003),
                            Name = "movie.mp4",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f3b22290-da73-4468-a6ce-c0a33bb18dc3"),
                            FolderId = new Guid("258d0c88-4360-4ec3-b904-f65406deebe3"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(8007),
                            Name = "project_plan.docx",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c1f9dee4-fe2e-4162-a13b-f38c6dd25b64"),
                            FolderId = new Guid("258d0c88-4360-4ec3-b904-f65406deebe3"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(8017),
                            Name = "presentation.pptx",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("12f85cfa-303b-47e2-b95a-92551dc1d418"),
                            FolderId = new Guid("8b634a62-0546-46ed-9b2b-44f9cb9d3d81"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(8031),
                            Name = "report.pdf",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("27732c22-87e0-43d2-8e55-5c65377b1b4e"),
                            FolderId = new Guid("e15cad81-6f4d-429b-9c76-152cb06f2f6b"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(8034),
                            Name = "archive.zip",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("31fa2f23-f357-4295-9e64-c52189bae71b"),
                            FolderId = new Guid("e15cad81-6f4d-429b-9c76-152cb06f2f6b"),
                            LastChanged = new DateTime(2024, 12, 23, 18, 25, 58, 268, DateTimeKind.Local).AddTicks(8038),
                            Name = "data.csv",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32d1d217-cd8e-4b9c-b1a7-6145fedf7bb6"),
                            Name = "Documents",
                            OwnerId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d57e963a-699a-4903-806d-65af672bdf32"),
                            Name = "Photos",
                            OwnerId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7c77b084-8744-493f-9232-64524dd62485"),
                            Name = "Music",
                            OwnerId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("32cfeb41-b462-41d0-885f-b63661d9f1c2"),
                            Name = "Videos",
                            OwnerId = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("258d0c88-4360-4ec3-b904-f65406deebe3"),
                            Name = "Projects",
                            OwnerId = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8b634a62-0546-46ed-9b2b-44f9cb9d3d81"),
                            Name = "Downloads",
                            OwnerId = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e15cad81-6f4d-429b-9c76-152cb06f2f6b"),
                            Name = "Archives",
                            OwnerId = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d71b4f5a-7afa-4271-8511-c914b0e7e2c8"),
                            Email = "ivona@gmail.com",
                            Password = "password123",
                            Username = "ivona"
                        },
                        new
                        {
                            Id = new Guid("dfe511b2-4bd4-4a00-af27-cbbb956d1ac9"),
                            Email = "jure@gmail.com",
                            Password = "password456",
                            Username = "jure"
                        },
                        new
                        {
                            Id = new Guid("1cd2f244-082a-418b-9bc2-112a173ef8b8"),
                            Email = "bruno@gmail.com",
                            Password = "pass9",
                            Username = "bruno"
                        },
                        new
                        {
                            Id = new Guid("2aa16ae1-1ab0-4384-b7ba-6f2288a6d470"),
                            Email = "ana@gmail.com",
                            Password = "pass7",
                            Username = "ana"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.AuditLog", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.User", "ChangedByUser")
                        .WithMany("AuditLogs")
                        .HasForeignKey("ChangedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.DumpFile", "File")
                        .WithMany("AuditLogs")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedByUser");

                    b.Navigation("File");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.DumpFile", "File")
                        .WithMany("Comments")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DumpFile", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.Folder", "Folder")
                        .WithMany("Files")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.User", "Owner")
                        .WithMany("Folders")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DumpFile", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Comments");

                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
