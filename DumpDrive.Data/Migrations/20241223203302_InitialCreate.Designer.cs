// <auto-generated />
using System;
using DumpDrive.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DumpDrive.Data.Migrations
{
    [DbContext(typeof(DumpDriveDbContext))]
    [Migration("20241223203302_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ChangedByUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("FileId");

                    b.ToTable("AuditLogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("824d9428-d5f6-4fb7-8f39-d5361c1a5ea7"),
                            ChangeType = 0,
                            ChangedByUserId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5"),
                            FileId = new Guid("32f425b4-023d-4471-af12-7a1dee7a9d31"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9568)
                        },
                        new
                        {
                            Id = new Guid("1514934d-d374-4abf-b657-f011e3a21350"),
                            ChangeType = 0,
                            ChangedByUserId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6"),
                            FileId = new Guid("e8502326-5498-46e2-812f-bc822fdc760f"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9589)
                        },
                        new
                        {
                            Id = new Guid("21d69c72-89a3-43a6-9c44-9cf9283479bc"),
                            ChangeType = 1,
                            ChangedByUserId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2"),
                            FileId = new Guid("d6e827ed-8306-48e8-9609-75b7e6e74c32"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9600)
                        },
                        new
                        {
                            Id = new Guid("0b214159-644a-42e4-8bf6-8a2e207e0861"),
                            ChangeType = 0,
                            ChangedByUserId = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1"),
                            FileId = new Guid("bb617bf0-1e31-4fc2-9f64-1bc756bcd52b"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9605)
                        },
                        new
                        {
                            Id = new Guid("356b92c0-23e1-474e-9885-f99ec45a4982"),
                            ChangeType = 0,
                            ChangedByUserId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6"),
                            FileId = new Guid("fee5ed5b-e298-4b90-86a6-c67d5c81b884"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9609)
                        },
                        new
                        {
                            Id = new Guid("02ded773-1683-43ad-b6ac-4d549ef86db5"),
                            ChangeType = 1,
                            ChangedByUserId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2"),
                            FileId = new Guid("35471e3e-6b90-49fa-a5c0-6e8aa40e8c12"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9616)
                        },
                        new
                        {
                            Id = new Guid("0c71fdf0-f7ce-455a-b42e-b704bb373cd9"),
                            ChangeType = 0,
                            ChangedByUserId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5"),
                            FileId = new Guid("6d043be4-b9f1-4f97-819e-b43945beab48"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9622)
                        },
                        new
                        {
                            Id = new Guid("f97650ed-a89a-43a8-8e3a-2184ee390939"),
                            ChangeType = 0,
                            ChangedByUserId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2"),
                            FileId = new Guid("1de5794d-5abf-477c-9f64-bf61af74870a"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9626)
                        },
                        new
                        {
                            Id = new Guid("13e17b7f-5caa-493e-9118-99c19a7c981e"),
                            ChangeType = 1,
                            ChangedByUserId = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1"),
                            FileId = new Guid("224e18e7-51d8-4b17-8de8-c2a88eb021d2"),
                            Timestamp = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(9630)
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2e650d7-4700-4fbf-a918-94e864ec2a6c"),
                            Content = "Great resume!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6631),
                            FileId = new Guid("32f425b4-023d-4471-af12-7a1dee7a9d31"),
                            UserId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5")
                        },
                        new
                        {
                            Id = new Guid("02ed643a-1a01-48fe-ae0a-63a292388130"),
                            Content = "Lovely picture!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6661),
                            FileId = new Guid("e8502326-5498-46e2-812f-bc822fdc760f"),
                            UserId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6")
                        },
                        new
                        {
                            Id = new Guid("65d2594b-9fbd-4404-a3ca-c027d7f58b02"),
                            Content = "Nice music!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6666),
                            FileId = new Guid("d6e827ed-8306-48e8-9609-75b7e6e74c32"),
                            UserId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2")
                        },
                        new
                        {
                            Id = new Guid("bd8fe442-1faf-4591-b907-e50e690229b7"),
                            Content = "Cool video!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6692),
                            FileId = new Guid("bb617bf0-1e31-4fc2-9f64-1bc756bcd52b"),
                            UserId = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1")
                        },
                        new
                        {
                            Id = new Guid("2ffa6dd0-433e-42f9-ba85-b29b484227a2"),
                            Content = "This resume could be better.",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6698),
                            FileId = new Guid("32f425b4-023d-4471-af12-7a1dee7a9d31"),
                            UserId = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1")
                        },
                        new
                        {
                            Id = new Guid("866b0120-9b3a-4f02-bfe5-4a0416c525b0"),
                            Content = "Beautiful image!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6704),
                            FileId = new Guid("e8502326-5498-46e2-812f-bc822fdc760f"),
                            UserId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2")
                        },
                        new
                        {
                            Id = new Guid("f2a93e8e-1c37-4ff3-b013-4906b46bbed6"),
                            Content = "I dont like this song!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6708),
                            FileId = new Guid("d6e827ed-8306-48e8-9609-75b7e6e74c32"),
                            UserId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2")
                        },
                        new
                        {
                            Id = new Guid("a65a4dc6-14a8-48b3-9c6a-e722a47bb3b0"),
                            Content = "Amazing video!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6715),
                            FileId = new Guid("bb617bf0-1e31-4fc2-9f64-1bc756bcd52b"),
                            UserId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6")
                        },
                        new
                        {
                            Id = new Guid("b31ee5bf-4dad-49da-a545-f5027723fbd9"),
                            Content = "Excellent project plan!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6719),
                            FileId = new Guid("fee5ed5b-e298-4b90-86a6-c67d5c81b884"),
                            UserId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6")
                        },
                        new
                        {
                            Id = new Guid("771366b1-9c06-4b9a-a9e0-b9141f9d5359"),
                            Content = "Great presentation!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6725),
                            FileId = new Guid("35471e3e-6b90-49fa-a5c0-6e8aa40e8c12"),
                            UserId = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1")
                        },
                        new
                        {
                            Id = new Guid("f5e8222b-0b63-42dc-a5de-d6ca3f458cfc"),
                            Content = "Very detailed report!",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6730),
                            FileId = new Guid("6d043be4-b9f1-4f97-819e-b43945beab48"),
                            UserId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5")
                        },
                        new
                        {
                            Id = new Guid("9dcc1f61-a049-4a4c-941b-94c53e1758bb"),
                            Content = "Important archive data.",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6737),
                            FileId = new Guid("1de5794d-5abf-477c-9f64-bf61af74870a"),
                            UserId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6")
                        },
                        new
                        {
                            Id = new Guid("4632e19f-dec6-4902-818e-26a47e12fc73"),
                            Content = "Data needs cleanup.",
                            CreatedAt = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(6741),
                            FileId = new Guid("224e18e7-51d8-4b17-8de8-c2a88eb021d2"),
                            UserId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5")
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DumpFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FolderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32f425b4-023d-4471-af12-7a1dee7a9d31"),
                            FolderId = new Guid("5cef4e4f-e45e-4c18-9412-95e0a60485ba"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 633, DateTimeKind.Local).AddTicks(2231),
                            Name = "resume.pdf",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e8502326-5498-46e2-812f-bc822fdc760f"),
                            FolderId = new Guid("d35949dd-0fa8-4d63-9bf9-841bd1ceea8d"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4021),
                            Name = "holiday.jpg",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d6e827ed-8306-48e8-9609-75b7e6e74c32"),
                            FolderId = new Guid("24d9ab73-e685-4f17-95d1-27ee7c49fd7f"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4051),
                            Name = "song.mp3",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("bb617bf0-1e31-4fc2-9f64-1bc756bcd52b"),
                            FolderId = new Guid("20579cf7-683a-43cb-96c1-1d1cea99e2ff"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4055),
                            Name = "movie.mp4",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fee5ed5b-e298-4b90-86a6-c67d5c81b884"),
                            FolderId = new Guid("560285d6-0b19-4d6d-a3e6-a8922eb9fee8"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4058),
                            Name = "project_plan.docx",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("35471e3e-6b90-49fa-a5c0-6e8aa40e8c12"),
                            FolderId = new Guid("560285d6-0b19-4d6d-a3e6-a8922eb9fee8"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4066),
                            Name = "presentation.pptx",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6d043be4-b9f1-4f97-819e-b43945beab48"),
                            FolderId = new Guid("22bf8709-b379-4694-8d7e-1da607c38a46"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4069),
                            Name = "report.pdf",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1de5794d-5abf-477c-9f64-bf61af74870a"),
                            FolderId = new Guid("0556fbe4-0248-4194-906a-03931cf77874"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4071),
                            Name = "archive.zip",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("224e18e7-51d8-4b17-8de8-c2a88eb021d2"),
                            FolderId = new Guid("0556fbe4-0248-4194-906a-03931cf77874"),
                            LastChanged = new DateTime(2024, 12, 23, 21, 33, 1, 635, DateTimeKind.Local).AddTicks(4084),
                            Name = "data.csv",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5cef4e4f-e45e-4c18-9412-95e0a60485ba"),
                            Name = "Documents",
                            OwnerId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d35949dd-0fa8-4d63-9bf9-841bd1ceea8d"),
                            Name = "Photos",
                            OwnerId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("24d9ab73-e685-4f17-95d1-27ee7c49fd7f"),
                            Name = "Music",
                            OwnerId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("20579cf7-683a-43cb-96c1-1d1cea99e2ff"),
                            Name = "Videos",
                            OwnerId = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("560285d6-0b19-4d6d-a3e6-a8922eb9fee8"),
                            Name = "Projects",
                            OwnerId = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("22bf8709-b379-4694-8d7e-1da607c38a46"),
                            Name = "Downloads",
                            OwnerId = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0556fbe4-0248-4194-906a-03931cf77874"),
                            Name = "Archives",
                            OwnerId = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a26a6659-dc93-4648-8369-f6d22bf81bb5"),
                            Email = "ivona@gmail.com",
                            Password = "password123",
                            Username = "ivona"
                        },
                        new
                        {
                            Id = new Guid("59cd52ed-a7a7-4f8c-9470-fc6acc1ed8c6"),
                            Email = "jure@gmail.com",
                            Password = "password456",
                            Username = "jure"
                        },
                        new
                        {
                            Id = new Guid("1026c846-44d1-4a91-9f70-fb6930d95ae2"),
                            Email = "bruno@gmail.com",
                            Password = "pass9",
                            Username = "bruno"
                        },
                        new
                        {
                            Id = new Guid("452b0e07-2970-4fd4-b6ad-c8e6334285b1"),
                            Email = "ana@gmail.com",
                            Password = "pass7",
                            Username = "ana"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.AuditLog", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.User", "ChangedByUser")
                        .WithMany("AuditLogs")
                        .HasForeignKey("ChangedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.DumpFile", "File")
                        .WithMany("AuditLogs")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedByUser");

                    b.Navigation("File");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.DumpFile", "File")
                        .WithMany("Comments")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DumpFile", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.Folder", "Folder")
                        .WithMany("Files")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.User", "Owner")
                        .WithMany("Folders")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DumpFile", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Comments");

                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
